name: CI

on:
  release:
    types: [published]

jobs:

  info:
    name: Prepare release
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    timeout-minutes: 5
    outputs:
      version: ${{ steps.version.outputs.version }}
      name: ${{ steps.version.outputs.name }}
    steps:
    - name: Checkout commit
      uses: actions/checkout@v2
    - name: Setup Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Cache PyPI
      uses: actions/cache@v2.1.5
      with:
        key: pip-lint-${{ hashFiles('requirements/*.txt') }}
        path: ~/.cache/pip
        restore-keys: |
          pip-lint-
    - name: Install dependencies
      run: |
        python -m pip install pip
        make setup
    - name: Save the package version
      id: version
      run: |
        echo "::set-output name=version::$(python setup.py --version)"
        echo "::set-output name=name::$(python setup.py --name)"
    - name: Show version
      run: |
        echo ${{ steps.version.outputs.name }}==${{ steps.version.outputs.version }}

  dockerhub_deploy:
    name: Release image if needed
    runs-on: ubuntu-latest
    needs: [info]
    if: github.event_name == 'release'
    steps:
    - name: Checkout commit
      uses: actions/checkout@v2
    - name: Login to DockerHub
      uses: docker/login-action@v1.9.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build release image
      run: |
        export IMAGE=neuromation/${{ needs.info.outputs.name }}
        export TAG=${{ needs.info.outputs.version }}

        docker build -t neuromation/${{ needs.info.outputs.name }}:latest -t $IMAGE:$TAG .
    - name: Push release release image
      id: push
      run: |
        docker push neuromation/${{ needs.info.outputs.name }} --all-tags
