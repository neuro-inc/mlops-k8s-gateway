name: "CI"

on:
  push:
    branches: [master]
    tags: [v*.*, v*.*.*]
  pull_request:
    branches: [master]

jobs:

  lint:
    name: Linter
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Checkout commit
      uses: actions/checkout@v2
    - name: Setup Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Cache PyPI
      uses: actions/cache@v2.1.5
      with:
        key: pip-lint-${{ hashFiles('requirements/*.txt') }}
        path: ~/.cache/pip
        restore-keys: |
          pip-lint-
    - name: Install dependencies
      run: |
        python -m pip install pip
        make setup
    - name: Run linters
      run: |
        make lint

  info:
    name: Prepare release
    runs-on: ubuntu-latest
    needs: [lint]
    timeout-minutes: 5
    outputs:
      version: ${{ steps.version.outputs.version }}
      name: ${{ steps.version.outputs.name }}
    steps:
    - name: Checkout commit
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.workflow_run.head_sha }}
        fetch-depth: 0
    - name: Setup Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Cache PyPI
      uses: actions/cache@v2.1.5
      with:
        key: pip-lint-${{ hashFiles('requirements/*.txt') }}
        path: ~/.cache/pip
        restore-keys: |
          pip-lint-
    - name: Install dependencies
      run: |
        python -m pip install pip
        make setup
    - name: Save the package version
      id: version
      run: |
        echo "::set-output name=version::$(python setup.py --version)"
        echo "::set-output name=name::$(python setup.py --name)"
    - name: Show version
      run: |
        echo ${{ steps.version.outputs.name }}==${{ steps.version.outputs.version }}

  build_image:
    name: Build image
    runs-on: ubuntu-latest
    needs: [info]
    steps:
    - name: Purge old artifacts
      uses: kolpav/purge-artifacts-action@v1
      with:
        token: ${{ secrets.GH_TOKEN }}
        expire-in: 30mins
    - name: Checkout commit
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.workflow_run.head_sha }}
        fetch-depth: 0
    - name: Build release image
      run: |
        docker build -t ${{ needs.info.outputs.name }} .
    - name: Store image in run's artifacts
      uses: neuro-inc/upload-image-action@v21.9.2
      with:
        image: ${{ needs.info.outputs.name }}
        token: ${{ secrets.GH_TOKEN }}
